################################################################################
# AMD GCC 13.0 SPEC CPUv8 Rate Configuration File for 64-bit Linux
#
#      File name                : my_project.cfg
#      Creation Date            : April 6, 2023
#      CPUv8 Version            : Kit 34
#      Supported benchmarks     : All Rate benchmarks (intrate, fprate)
#      Compiler name/version    : GCC 13.0.0
#      Operating system version : RHEL 8.6
#      Supported OS's           : SLE 15 SP4, Ubuntu 22.04, RHEL 9.0, RHEL 8.6
#      Hardware                 : AMD znver4 (AMD64)
#      FP Base Pointer Size     : 64-bit
#      FP Peak Pointer Size     : 64-bit
#      INT Base Pointer Size    : 64-bit
#      INT Peak Pointer Size    : 32/64-bit
#      Auto Parallelization     : No
#
# Note: This is a stripped down config file for educational purposes.
#
# Important! If you write your own run script, please set the stack size to
# "unlimited" when executing this binary package.  Failure to do so may cause
# some benchmarks to overflow the stack.  For example, to set stack size within
# the bash shell, include the following line somewhere at the top of your run
# script before the runcpu invocation:
#
#      ulimit -s unlimited
#
################################################################################
# Modifiable macros:
################################################################################
# We need the build path so that we can set the library path:
%define build_path /home/work/cpuv8/kit38/
# Create a project name so that we can keep track of our files:
%define project_name my_project
# The required flags file contains descriptions for the compiler flags.
%define flags_file_name gcc13-flags.xml
# Do NOT change build_lib_dir after the build or it will trigger a
# rebuild of 32-bit binaries.
%define lib_dir %{project_name}
# To enable the platform file, which is only needed for published results, 
# be sure to uncomment the flagsurl02 header line below in the Header settings.
%define platform_file_name INVALID_platform_%{project_name}.xml
################################################################################
################################################################################
# !!!YOU SHOULD NOT HAVE TO MODIFY ANYTHING BEYOND THIS POINT!!!
################################################################################

################################################################################
# Include file names
################################################################################
# The include file contains fields that are commonly changed. This file is auto-
# generated based upon INI file settings and should not need user modification
# for runs. The flags include file contains all of the compiler flags.

%define inc_file_name %{project_name}.inc
%define flags_inc_file_name %{project_name}_flags.inc
%define port_flags_inc_file_name %{project_name}_portability_flags.inc
%define workaround_flags_inc_file_name %{project_name}_workaround_flags.inc

# Binary label extension:
# Let's define a label extension to our binaries to make them easy to track:
%define ext %{project_name}

################################################################################
# Paths and Environment Variables
################################################################################
# Allow environment variables to be set before runs:
preenv                   = 1

# Necessary to avoid out-of-memory exceptions on certain SUTs:
preENV_MALLOC_CONF       = retain:true

# Set the shared object library path for runs and builds:
preENV_LD_LIBRARY_PATH   = $[top]/%{lib_dir}/lib:$[top]/%{lib_dir}/lib32:%{ENV_LD_LIBRARY_PATH}
# Define 32-bit library build paths:
# Do NOT use $[top] with the 32-bit libraries because doing so will cause an
# options checksum error triggering a xalanc recompile attempt on SUTs having
# different file paths.
# Do NOT change build_lib_dir after the build or it will also trigger a
# rebuild of the xalanc:
AMDALLOC_LIB32_PATH      = %{build_path}/%{lib_dir}/lib32
# The include file is only needed for runs, but not for builds.
include: %{inc_file_name}
# Switch back to default block after the include file:
default:

% define build_ncpus 64    # controls number of simultaneous compiles
makeflags              = --jobs=%{build_ncpus} --load-average=%{build_ncpus}

################################################################################
# Header settings -- in alphabetical order
################################################################################
# By default, your config file will be backed up after each runcpu invocation
# which can result in a lot of files.
backup_config            = 0 # set to 0 if you do not want backup files
# After setting up the benchmark for a run, sync to flush disk caches:
bench_post_setup         = sync
# command_add_redirect: If set, the generated ${command} will include
# redirection operators (stdout, stderr), which are passed along to the shell
# that executes the command. If this variable is not set, specinvoke does the
# redirection.
command_add_redirect     = yes
env_vars                 = yes
flagsurl01               = $[top]/%{flags_file_name}
#flagsurl02              = $[top]/%{platform_file_name}
# label: User defined extension string that tags your binaries & directories:
label                    = %{ext}
line_width               = 1020
log_line_width           = 1020
mean_anyway              = yes
# Output the results in all supported formats (e.g. pdf, txt, csv, html)
output_format            = all
# If you convert the kit to development, reportable must be turned off or
# nothing will build or run:
reportable               = no
# These defaults can be overridden on the runcpu invocation:
size                     = test,train,ref
# This is mainly to support instrumentation:
teeout                   = yes
teerunout                = yes
# These defaults can be overridden on the runcpu invocation:
tune                     = base,peak

################################################################################
# Include the flags file:
################################################################################

include: %{flags_inc_file_name}

__HASH__
788.prime_r=base=my_project:
# Last updated 2023-06-13 04:49:13
opthash=88f29323c2a0b59c3358f0d294e2512d7c012edd6b6bf25a5ff914b686942326
baggage=
compiler_version=\
@eNptj8tqwzAQRff6ilm2BFsNLaEIsgjClIKpjaO22QlHVhWBLAk9EpOvj2hpV10NM5w7nAv0cKD8\
oxn2r90b73pWBkHvUVsFx6xNqrSF6KWINaJd2zaU8RdKt2q1+ttb1vHPYdf3zbDFOQZsnBgNNvoo\
FymwEgIvzxu+eaq8qIy2eamUzXi9rh/rB2ySqy5h9F4GxMagZCLwD46os19a5SAnuOh0IlDXWPze\
EDsFOU4wu0kaAt5FvaB99t6FVALFEISbfZAxamdhNMqF8mSOBK7FE64xTaiIwlmGb+JHDu5K13tA\
N0hbYTk=
compile_options=\
@eNqdUdFOwjAUfe9XNH1dSkCMJoSRsK2SaWENbAZ9WcYoWt1Wshaifr3dxghEwoP3pbe9595z7ulM\
FjhPPvlGZBzKrRayUAPgkWdCAzYlsxCGc0KgE/nUA0qXItVxuSvWooz3vBSbbxt1ETCpMp0m73T7\
PQSAG0zZAKI3y4I4v7uFWOlEi7Q613ZqWb17iM1NtpQdCbG3YMQ1x8wjTjSBJnBwY9qTMn23fwrD\
0Yd4k2kJ69phUrd63PIyF0qJPa8q9aCYMsMLh0ruypSPEHAH0F0u7WuaWlDgPAYstNGZRATMRi6L\
Huh4sjC1c7kIBE0rC/2p/0oM4LL4GkiW4XwcG3g77PIyNWWDZcE8HDs+9cOXlrveEAHqz54uWd3E\
NQurGMrVB0+1GrUPOEvydSZWucny5pZkmUwx/9JV+egHhLVd1Ptr6X/MoL5TGXHKfm7VCeAo6KAg\
iKrPOvmpXylt0hg=
exehash=86186bef1f84d6b9588499e38ea57e9f123d282f65c7d4605105207bb15af828

788.prime_r=peak=my_project:
# Last updated 2023-06-13 04:49:15
opthash=8f80a927e0c53c82c74aec2dac3c67eb0ebd132f0e32019a2ff5c6707ce8b7e4
baggage=
compiler_version=\
@eNptj8tqwzAQRff6ilm2BFsNLaEIsgjClIKpjaO22QlHVhWBLAk9EpOvj2hpV10NM5w7nAv0cKD8\
oxn2r90b73pWBkHvUVsFx6xNqrSF6KWINaJd2zaU8RdKt2q1+ttb1vHPYdf3zbDFOQZsnBgNNvoo\
FymwEgIvzxu+eaq8qIy2eamUzXi9rh/rB2ySqy5h9F4GxMagZCLwD46os19a5SAnuOh0IlDXWPze\
EDsFOU4wu0kaAt5FvaB99t6FVALFEISbfZAxamdhNMqF8mSOBK7FE64xTaiIwlmGb+JHDu5K13tA\
N0hbYTk=
compile_options=\
@eNqVUd9vgkAMfr+/orlXckbjsiVGTARuhu3kLgqL2wtBhI0NuAXOZfOv36FiMPuV9aVt2n79+tWT\
JSmilyTN8gTkq8pkWY+QQ+8o42JOPR/8BaVgBS5zUK2qLFZhtS03WRW+JVWWfpi4j5EOaz2p415/\
OMAI2XwuRoAfDQNIcXkBpFaRyuLGb8zYMAZXQHQm25U9CcRZCmpr5znUCmagjfA0qpVGiKr4ydyV\
es0QSJorCUc7DIVM6B0wruW2ipMJRvYI7NXK/G1/28StGy58E5/RwUizt0Vwzaazpa6dU8OIH0aF\
787dB6obfiS6R6IrfzENBV/4U8tlrn/fQu6JY8Rc7/Y7tY43/qkCjOX6OYlVPTnpkkfFJs/WhY6K\
QxbluYxJ8q6a8ulSgL0QzPkq1v/O5O2ZzLUayboEOlWN12k4cTqS4EHzic4bPgGF3sL7
exehash=993ffd32eb4c2b7542167f872667dbbb422212afca1e704b640bb57bebf66edb

779.mdgb_r=base=my_project:
# Last updated 2023-06-13 13:30:54
opthash=8f896a8134cfb86a8398956cc24d9ffc7ce90c428a88083580db35284fcf5b51
baggage=
compiler_version=\
@eNptj8tqwzAQRff6ilm2BFsNLaEIsgjClIKpjaO22QlHVhWBLAk9EpOvj2hpV10NM5w7nAv0cKD8\
oxn2r90b73pWBkHvUVsFx6xNqrSF6KWINaJd2zaU8RdKt2q1+ttb1vHPYdf3zbDFOQZsnBgNNvoo\
FymwEgIvzxu+eaq8qIy2eamUzXi9rh/rB2ySqy5h9F4GxMagZCLwD46os19a5SAnuOh0IlDXWPze\
EDsFOU4wu0kaAt5FvaB99t6FVALFEISbfZAxamdhNMqF8mSOBK7FE64xTaiIwlmGb+JHDu5K13tA\
N0hbYTk=
compile_options=\
@eNqtUcFugkAQve9XTPZK1mht2sSIicDW0KJsFBrbC0FcWlpgCaBp+/VdQBQSe+tcGPLevHnzdiVS\
kvifPIxiDiIrI5EWE2TQZ2rZbElXDjhrSkFzTctARZlHQenlh3Qf5d6R51H4reIhRrIt5KTsB8Px\
CCOk20s2AfymKECSu1sgRblXA0UZ3QMJgIh21UAAMTaM6vKzMqjmLkAWsW/kmJ8H7+pPKrXHQMK4\
FBUSioynSQZnxWEFZjxPoqKIjrzi1IKexeRemBbikAd8hpE+AX27Va95akFbe7SZo+KeRYzkJTpz\
H6z5YiOxvl2M7GaUOebSfKWScN18LcPstTPXTMt0XiTxdEstQbfOeu5JoXbN9fNqlYbb17rcjJFl\
rp664Tf1d6idVGVNxe6DB2Uxg3Yw9pN9HO0S2SXNnx/HIiD8q6zgc1IAdZCWcQn5f+OxTK2Kpuun\
H16HcLZ48mS71cN2XvUXBt3cXA==
exehash=52bf9d980b6ebd2c33f68917ed18be7bd0ab2b4c3d00b360a687216296f8224f

779.mdgb_r=peak=my_project:
# Last updated 2023-06-13 13:30:55
opthash=7021fdce466d39c9e399b24940ab7cbd89e5d475bb93718a2ecb16e510c3187c
baggage=
compiler_version=\
@eNptj8tqwzAQRff6ilm2BFsNLaEIsgjClIKpjaO22QlHVhWBLAk9EpOvj2hpV10NM5w7nAv0cKD8\
oxn2r90b73pWBkHvUVsFx6xNqrSF6KWINaJd2zaU8RdKt2q1+ttb1vHPYdf3zbDFOQZsnBgNNvoo\
FymwEgIvzxu+eaq8qIy2eamUzXi9rh/rB2ySqy5h9F4GxMagZCLwD46os19a5SAnuOh0IlDXWPze\
EDsFOU4wu0kaAt5FvaB99t6FVALFEISbfZAxamdhNMqF8mSOBK7FE64xTaiIwlmGb+JHDu5K13tA\
N0hbYTk=
compile_options=\
@eNqtUcFOg0AQve9XTPZKtmlTo0lTmhRYG5SymxZM9UIoBUWBbWBr1K93oaWFRD05l53Nmzfz5o0r\
CpKHb3GSZjGIvUxFUU2QRR+ow/iSuh54K0rB8G3HQpUs00gG5aHYpWXwHpdp8qnjIUYqrRRT5YPh\
eIQRMtmSTwA/axqQ/PoKSCV3eqRpoxsgERDRjhoIINaaU1M9rkUNfwEqCEvCSipmWEYv+leh2o+B\
JJkUNZiIfVzke2gqG3LgcDUDppU4lFE8w8icgLnZ6D/Nb0Fm3DHu6bgnByOl2uT+rTNfrBXWl4YR\
O1K5Zy/tJ6oKfhXadOJs5c0N27G9R1V70t0gdOOt5kEfv6yCkWO7913/jvGnL31jpmL7GkeymkHL\
zcJ8l6XbXGX58RdmmYhI/CFr+OwBQGORY13s+6/FWbu4Yxu1vV1JHVRN6hScVZ5kMb++Wudk30Gr\
zT8=
exehash=b6fb89c709ebb5140399a82b501041d72ddf5660e8b70d83615e4a420e365062

