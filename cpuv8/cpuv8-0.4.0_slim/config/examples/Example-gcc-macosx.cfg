#------------------------------------------------------------------------------
# SPEC CPU(R) v8 config for: gcc/g++/gfortran on macOS
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#    Compiler version(s):    tbd.  Unlikely to work with anything before GCC 8
#    Operating system(s):    tbd
#    Hardware:               tbd
#
# If your system differs, this config file might not work.
# You might find a better config file at https://www.spec.org/cpuv8/results
#
# Note: Older GCC
#    Please use the newest GCC that you can.
#    *** This config file will definitely fail with GCC 7 and earlier. ***
#    If using older GCC, you may need to reduce optimization.
#
#    This config file was tested with versions of GCC that
#     were built by steps similar to:
#          Install Xcode
#          Add Xcode command line:
#              $ xcode-select --install
#          Unpack tarballs
#              gcc-11.2.0.tar.xz
#              mpfr-3.1.6.tar.xz  GNU Multiprecision Floating Point library
#              mpc-1.0.3.tar.gz   GNU Multiprecision Complex library
#              isl-0.18.tar.bz2   Integer Set Library
#              gmp-6.1.0.tar.xz   GNU Multiprecision Library
#          cd gcc-11.2.0
#          ln -s ../gmp-6.1.2    gmp
#          ln -s ../isl-0.18     isl
#          ln -s ../mpc-1.0.3    mpc
#          ln -s ../mpfr-3.1.6   mpfr
#
#          ./configure --enable-languages=c,c++,fortran --enable-lto \
#          --with-sysroot=/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk  \
#          --prefix=/Users/me/work/compilers/gcc-11.2.0 \
#          --with-local-prefix=/Users/me/work/compilers
#
#          make bootstrap && make install
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   https://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%ifndef %{label}
%   define label "mytest"           # (2)      Use a label meaningful to *you*.
%endif


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or,
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 4      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%if %{bits} == 64
%   define model        -m64
%elif %{bits} == 32
%   define model        -m32
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif



#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

default:
   flagsurl             = $[top]/config/flags/gcc.xml
   ignore_errors        = 1
   iterations           = 1
   label                = %{label}-%{bits}
   log_line_width       = 4096
   makeflags            = --jobs=%{build_ncpus}
   mean_anyway          = 1
   output_format        = txt,html,cfg,pdf,csv
   preenv               = 1
   reportable           = 0
   tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system,
#              as reported by:
#                   sysctl machdep.cpu.core_count
#              or perhaps the number of virtual CPUs as reported by:
#                   sysctl machdep.cpu.thread_count
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point, which you can adjust.
#               A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
default:
   copies                 = 1       # EDIT to change number of copies (see above)
   threads                = 2       # EDIT to change number of OpenMP threads (see above)


#------- Compilers ------------------------------------------------------------
default:
#  EDIT: The parent directory for your compiler.
#        Do not include the trailing /bin/
#        Do not include a trailing slash
#  Example:
#     You built GCC in directory                  /Users/me/gcc-11.2.0/bin/gcc
#     Use:                    %   define gcc_dir "/Users/me/gcc-11.2.0"
#
%ifndef %{gcc_dir}
%   define  gcc_dir        "/Users/me/gcc-11.2.0"  # EDIT (see above)
%endif

# EDIT: If your compiler version is less than 10, comment out
#       the next line to avoid compile errors for Fortran benchmarks
#
%define GCCge10  # EDIT: comment out if using GCC 9 or earlier

# EDIT if needed: the preENV line adds library directories to the runtime
#      path.  You can adjust it, or add lines for other environment variables.
#      See: https://www.spec.org/cpu2017/Docs/config.html#preenv
#      and: https://gcc.gnu.org/onlinedocs/gcc/Environment-Variables.html
   preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64
  #preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64:%{ENV_LD_LIBRARY_PATH}
   SPECLANG                = %{gcc_dir}/bin/
   CC                      = $(SPECLANG)gcc      -std=c18     %{model} # See note "Older GCC" above
   CXX                     = $(SPECLANG)g++      -std=c++17   %{model}
   FC                      = $(SPECLANG)gfortran -std=f2008   %{model}
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = --version
   CXX_VERSION_OPTION      = --version
   FC_VERSION_OPTION       = --version

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = Not Applicable
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = Not Applicable
%endif


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file
    # systems may fail spectacularly and frequently (or, worse, quietly and
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

743.lua_r:
   PORTABILITY = -DLUA_USE_MACOS

745.brotli_r:
   PORTABILITY = -DOS_MACOS

#----------------------------------------------------------------------
#       GCC workarounds that do not count as PORTABILITY
#----------------------------------------------------------------------
# The workarounds in this section would not qualify under the SPEC CPU
# PORTABILITY rule.
#   - In peak, they can be set as needed for individual benchmarks.
#   - In base, individual settings are not allowed; set for whole suite.
# See:
#     https://www.spec.org/cpu2017/Docs/runrules.html#portability
#     https://www.spec.org/cpu2017/Docs/runrules.html#BaseFlags
#
%     ifdef %{GCCge10}
         EXTRA_FFLAGS = -fallow-argument-mismatch
%     endif

#-------- Tuning Flags common to Base and Peak --------------------------------
#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   specspeed:
      #
      # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
      # If you wish to run SPECspeed, please use
      #
      #     runcpu --define bits=64
      #
      fail_build = 1
%else
   specspeed:
      EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP
      preENV_OMP_STACKSIZE = 120M
%endif

#--------  Base Tuning Flags ----------------------------------------------
# EDIT if needed -- If you run into errors, you may need to adjust the
#                   optimization - for example you may need to remove
#                   the -march=native.
#
default=base:         # flags for all base
   OPTIMIZE   = -g -O3 -march=native


#--------  Peak Tuning Flags ----------------------------------------------
default:           # If you develop some peak tuning, remove these two lines
   basepeak = yes  # and put your tuning in the default=peak: section below.
default=peak:


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++/Fortran: Version 11.2.0 of GCC, the
   sw_compiler002   = GNU Compiler Collection

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
specrate,specspeed:
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
specrate,specspeed:
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship
   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information

#--------- EDIT system information --------------------------------------------
specrate,specspeed:
                        # Example                             # Brief info about field
#  hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
#  hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
#  hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
#  hw_model           = # MacMumble 9999                      # system model name
#  hw_nchips          = # 99                                  # number chips enabled
#  hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
#  hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
#  hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   sw_file            = # OS X Extended (Encrypted)           # File System
#  sw_os              = # OS X 99.99.9 (99F99)                # Operating system and version
#  sw_other           = Xcode v99.99                          # And anything else performance relevant
#  sw_state           = # Run level 99                        # Software state.

   power_management   = # briefly summarize power settings

# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo
