#------------------------------------------------------------------------------
# SPEC CPU(R) v8 config file for Intel compilers / Windows x86_64
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd %SPEC%\config
#             copy Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#   Compiler: Intel(R) tbd
#             + Microsoft Visual Studio tbd
#             + Windows SDK tbd
#   OS:       tbd
#   Hardware: tbd
#
# If your system differs, this config file might not work.
# You might find a better config file at https://www.spec.org/cpuv8/results
#
# Compiler version notes:
#   (1) Always use the most recent release if possible.
#   (2) If you are using an older compiler, some systems may work better if
#       you remove the line
#           'SSE = -QxHost'
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   https://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
label      =  "myTest"              # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 8      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

default:
   command_add_redirect = 0
   flagsurl1            = $[top]/config/flags/Intel-ic17.0-official-windows64-revF.xml
   iterations           = 1
   line_width           = 1020
   log_line_width       = 1020
   makeflags            = -j%{build_ncpus}
   mean_anyway          = 1
   output_format        = txt,html,cfg,pdf,csv
   preenv               = 1
   reportable           = 0
   tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system,
#              or perhaps the number of virtual CPUs as reported by:
#                     wmic cpu get /value
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point, which you can adjust.
#               A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
default:
   copies                 = 1       # EDIT to change number of copies (see above)
   threads                = 2       # EDIT to change number of OpenMP threads (see above)

# Affinitization
# We need to know if the processors are ordered across cores first or in order
# If across cores, processors 0, 1, 2 and 3 are on distinct physical cores
# Otherwise, processors 0, 2, 4 and 6 are on distinct physical cores
specrate:
   submit  = specperl -e "system sprintf qq{start /b /wait /affinity %x %s}, (1<<$SPECCOPYNUM), q{ $command } "

#--------- Compilers ----------------------------------------------------------
default:
   #EDIT - Qvc may need adjusting, see
   #       https://software.intel.com/en-us/cpp-compiler-developer-guide-and-reference-qvc
   CC                      = icl   -Qvc14.2 -Qm64 /Qstd=c18   -TC
   CXX                     = icl   -Qvc14.2 -Qm64 /Qstd=c++17 -TP
   FC                      = ifort -Qvc14.2 -Qm64 /stand:f08

   # EDIT paths in next section as required for your installation
   WSDKLIBPATH             = "C:/Program Files (x86)/Windows Kits/10/Lib/10.0.14393.0"
   WSDKINCPATH             = "C:/Program Files (x86)/Windows Kits/10/Include/10.0.14393.0"
   INCPATH                 = "C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019/windows/compiler/include"
   INC64PATH               = "C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019/windows/compiler/include/intel64"

   EXTRA_CFLAGS            = -I$(INC64PATH) -I$(INCPATH) -I$(WSDKINCPATH)/ucrt -I$(WSDKINCPATH)/um
   EXTRA_CXXFLAGS          = -I$(INC64PATH) -I$(INCPATH) -I$(WSDKINCPATH)/ucrt -I$(WSDKINCPATH)/um
   EXTRA_FFLAGS            = -I$(INC64PATH) -I$(INCPATH) -I$(WSDKINCPATH)/ucrt -I$(WSDKINCPATH)/um
   EXTRA_FPPFLAGS          = -I$(INC64PATH) -I$(INCPATH) -I$(WSDKINCPATH)/ucrt -I$(WSDKINCPATH)/um
   LDOUT                   = -Fe$@ -link -LIBPATH:$(WSDKLIBPATH)/ucrt/x64 -LIBPATH:$(WSDKLIBPATH)/um/x64 -VERBOSE

default:   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = -QV
   CXX_VERSION_OPTION      = -QV
   FC_VERSION_OPTION       = -QV


#--------- Stack --------------------------------------------------------------
# The base rules require consistent flag settings (unless proven not possible).
# Therefore stack flags are set here for all benchmarks in a suite.
specrate:
   EXTRA_LDFLAGS     = /F1800000000

specspeed:
   LDOUT_OPTIONS     =  /stack:13958643712


#--------- Portability --------------------------------------------------------
default:
    EXTRA_PORTABILITY = -DSPEC_LP64

#-------- Tuning Flags common to Base and Peak --------------------------------
specspeed:
   EXTRA_OPTIMIZE          = -Qopenmp -DSPEC_OPENMP
   preENV_OMP_STACKSIZE    = 192M

default:
   SSE                     = -QxHost
   EXTRA_FOPTIMIZE         = -nostandard-realloc-lhs

default:
%if defined(%{noopt})
   OPT_ROOT                = -Od
%elif defined(%{medopt})
   OPT_ROOT                = -O2
%else
   OPT_ROOT                = -Qipo -O3 -Qprec-div-
%endif
   FAST                    = -Zi $(SSE) $(OPT_ROOT)

default:
   COPTIMIZE               = $(FAST) -Qopt-prefetch
   CXXOPTIMIZE             = $(FAST) -Qopt-prefetch -Qcxx-features
   FOPTIMIZE               = $(FAST) -Qopt-prefetch



#--------  Peak Tuning Flags ----------------------------------------------
default:           # If you develop some peak tuning, remove these two lines
   basepeak = yes  # and put your tuning in the default=peak: section below.
default=peak:


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- If you install new compilers, EDIT this section --------------------

specrate,specspeed:
   sw_compiler001   = C/C++: Version 17.0.1.143 of Intel C/C++
   sw_compiler002   = Compiler for Windows;
   sw_compiler003   = Fortran: Version 17.0.1.143 of Intel Fortran
   sw_compiler004   = Compiler for Windows;
   sw_base_ptrsize  = 64-bit
   sw_peak_ptrsize  = Not Applicable
   sw_other001      = Microsoft Visual Studio 2015 Update 3 libraries & tools
   sw_other002      = Windows 10 SDK (Aug 2016 v10.0.14393.0)

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
specrate,specspeed:
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
specrate,specspeed:
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship
   fw_bios            = # Version Mumble released May-2099    # Firmware information

#--------- EDIT system information --------------------------------------------
specrate,specspeed:
                        # Example                             # Brief info about field
 # hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
#  hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
#  hw_memory001       = # 4 TB (256 x 16 GB 2Rx4 PC4-2133P-R, # N GB (M x N GB nRxn
#  hw_memory002       = # running at 1600 MHz)                # PCn-nnnnnR-n[, ECC and other info])
   hw_model           = # TurboBlaster 3000                   # system model name
#  hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

#  sw_file            = # ext99                               # File system
#  sw_os001           = # Linux Sailboat                      # Operating system
#  sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
#  sw_state           = # Run level 99                        # Software state.

   power_management   = # briefly summarize power settings

# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know  a better answer than sysinfo
